version: 2.1
executors:
  python:
    docker:
      - image: python:3.7.3-stretch
  aws:
    docker:
      - image: amazon/aws-cli
jobs:
  check-app:
    executor: python
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip && pip install -r requirements.txt

            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - run:
          name: test
          command: |
            . venv/bin/activate
            make test
      - run:
          name: lint
          command: |
            . venv/bin/activate
            make lint
  create-infrastructure:
    executor: aws
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            yum install -y curl
            curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.21.2/2021-07-05/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
            kubectl version --short --client

            curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
            mv /tmp/eksctl /usr/local/bin
            eksctl version
      - run:
          name: create an EKS (Kubernetes) cluster
          command: |
            eksctl create cluster --name recommendation-engine-api
            kubectl get nodes
      - run:
          name: create an IAM role
          command: |
            aws iam create-role \
              --role-name FlaskDeployCBKubectlRole \
              --assume-role-policy-document file://trust.json \
              --output text --query 'Role.Arn'
            aws iam put-role-policy \
              --role-name FlaskDeployCBKubectlRole \
              --policy-name eks-describe \
              --policy-document file://iam-role-policy.json

            kubectl get -n kube-system configmap/aws-auth -o yaml > /tmp/aws-auth-patch.yml
            cat /System/Volumes/Data/private/tmp/aws-auth-patch.yml
workflows:
  default:
    jobs:
      - create-infrastructure
      # - check-app
      # - create-infrastructure:
      #     requires: [check-app]